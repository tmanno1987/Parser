package Parser;
public class TableTemp
{                          // ;   =   +   -   (   )   *   /   W   R   IF  TH  OD  ==  !=  >   <   >=  <=  {   }   CA  WH  DO  EL
   private char [][] opt = {{' ','<',' ',' ',' ',' ',' ',' ','<','<','<',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','<','<',' ','<'},//  ;
                            {'>',' ','<','<','<',' ','<','<',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','>',' ',' ',' ',' '},//  =
                            {'>',' ','>','>','<','>','<','<',' ',' ',' ','>',' ','>','>','>','>','>','>',' ','>',' ',' ',' ',' '},//  +
                            {'>',' ','>','>','<','>','<','<',' ',' ',' ','>',' ','>','>','>','>','>','>',' ','>',' ',' ',' ',' '},//  -
                            {' ',' ','<','<','<','=','<','<',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//  (
                            {'>',' ','>','>',' ','>','>','>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','>',' ',' ',' ',' '},//  )
                            {'>',' ','>','>','<','>','>','>',' ',' ',' ','>',' ','>','>','>','>','>','>',' ','>',' ',' ',' ',' '},//  *
                            {'>',' ','>','>','<','>','>','>',' ',' ',' ','>',' ','>','>','>','>','>','>',' ','>',' ',' ',' ',' '},//  /
                            {'>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','>',' ',' ',' ',' '},//  WRITE
                            {'>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','>',' ',' ',' ',' '},//  READ
                            {'>',' ','<','<','<',' ','<','<',' ',' ',' ','=','<','<','<','<','<','<','<',' ','>',' ','<',' ',' '},//  IF
                            {'>','<',' ',' ',' ',' ',' ',' ','<',' ','<',' ',' ',' ',' ',' ',' ',' ',' ','<','>','<',' ',' ',' '},//  THEN
                            {' ',' ','<','<','<',' ','<','<',' ',' ',' ','>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//  ODD
                            {' ',' ','<','<','<',' ','<','<',' ',' ',' ','>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//  ==
                            {' ',' ','<','<','<',' ','<','<',' ',' ',' ','>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//  !=
                            {' ',' ','<','<','<',' ','<','<',' ',' ',' ','>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//  >
                            {' ',' ','<','<','<',' ','<','<',' ',' ',' ','>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//  <
                            {' ',' ','<','<','<',' ','<','<',' ',' ',' ','>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//  >=
                            {' ',' ','<','<','<',' ','<','<',' ',' ',' ','>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//  <=
                            {' ',' ','<','<','<',' ','<','<',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','<','=',' ',' ',' ',' '},//  {
                            {'>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','<','>',' ',' ',' ','>'},//  }
                            {'>',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},//  CALL
                            {'>',' ','<','<','<',' ','<','<',' ',' ',' ','=','<','<','<','<','<','<','<',' ',' ',' ',' ','=',' '},//  WHILE
                            {'>','<',' ',' ',' ',' ',' ',' ',' ',' ','<',' ',' ',' ',' ',' ',' ',' ',' ','<',' ','<','<',' ',' '},//  DO
                            {'>','<',' ',' ',' ',' ',' ',' ',' ',' ','<',' ',' ',' ',' ',' ',' ',' ',' ','<',' ',' ',' ',' ',' '}};// ELSE

   private final String []  operators = {";","=","+","-","(",")","*","/","WRITE","READ","IF","THEN","ODD",
                                         "==","!=",">","<",">=","<=","{","}","CALL","WHILE","DO","ELSE"};

   public TableTemp()
   {
      // do nothing..
   }

   public String [] getOps()
   {
      return operators;
   }

   public char [][] getTable()
   {
      return opt;
   }
}